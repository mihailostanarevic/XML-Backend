version: '3'
services:

  postgresDB:
    image: postgres:latest
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_ROOT_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rent_a_car
    ports:
      - 5432:5432
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  eureka-serviceregistry:
    build: ./Eureka
    ports:
     - "8761:8761"
    container_name: eureka-serviceregistry
    tty: true

  #ad-service:
    #build: ./car-service
    #ports:
    #- "8082:8082"
    #container_name: ad-service
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
      #- POSTGRES_HOST=postgresDB
    #tty: true
    #depends_on:
      #- postgresDB
      #- eureka-serviceregistry

  auth-service:
    build: ./authentification-service
    ports:
    - "8081:8081"
    restart: always
    container_name: auth-service
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
      - POSTGRES_HOST=postgresDB
    tty: true
    depends_on:
      - postgresDB
      - eureka-serviceregistry

  #rent-service:
    #build: ./rent-service
    #ports:
    #- "8083:8083"
    #container_name: rent-service
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
      #- POSTGRES_HOST=postgresDB
    #tty: true
    #depends_on:
      #- eureka-serviceregistry
      #- postgresDB

  #search-service:
    #build: ./search-service
   # ports:
    #- "8084:8084"
    #container_name: search-service
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
      #- POSTGRES_HOST=postgresDB
    #tty: true
    #depends_on:
      #- postgresDB
      #- eureka-serviceregistry

  #resource-service:
    #build: ./resource-service
    #ports:
      #- "8086:8086"
    #container_name: resource-service
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
      #- POSTGRES_HOST=postgresDB
    #tty: true
    #depends_on:
      #- postgresDB
      #- eureka-serviceregistry

  #report-service:
   # build: ./report-service
    #ports:
    #- "8087:8087"
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
      #- POSTGRES_HOST=postgresDB
    #tty: true
    #depends_on:
     # - eureka-serviceregistry

  #message-service:
   # build: ./message-service
    #ports:
    #- "8085:8085"
    #restart: always
    #container_name: message-service
    #environment:
      #- REGISTRY_HOST=eureka-serviceregistry
    #tty: true
    #depends_on:
     # - eureka-serviceregistry

  zuul:
    build: ./Zuul
    ports:
    - "8080:8080"
    restart: always
    environment:
      - REGISTRY_HOST=eureka-serviceregistry
    container_name: zuul
    tty: true
    depends_on:
      - eureka-serviceregistry
      - postgresDB
volumes: 
  postgresdata: 
